name: Master workflow
on:
  push:
    branches:
      - master
jobs:
  minikube:
    name: minikube
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install minikube
        id: install-minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64
          sudo install minikube-darwin-amd64 /usr/local/bin/minikube
          brew install hyperkit docker
          echo "::set-output name=cache-key::$(minikube version | md5)"
      - name: Cache minikube
        uses: actions/cache@v2
        with:
          path: |
            ~/.minikube/cache
            ~/.minikube/bin
          key: ${{ runner.os }}-minikube-${{ steps.install-minikube.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-minikube-
      - name: Start minikube
        run: |
          minikube start --vm-driver hyperkit --wait all
          minikube docker-env | sed '/^#/d;s/="\(.*\)"/=\1/g;s/export //g' >> $GITHUB_ENV
      - name: Run in minikube
        run: |
          docker build . -t testing
          docker container run testing
  docker-for-mac:
    name: Docker for Mac
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Docker for Mac
        run: |
          brew install homebrew/cask/docker --no-quarantine
          sudo cp "/Applications/Docker.app/Contents/Library/LaunchServices/com.docker.vmnetd" "/Library/PrivilegedHelperTools"
          sudo cat > "/Library/LaunchDaemons/com.docker.vmnetd.plist" << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>Label</key>
            <string>com.docker.vmnetd</string>
            <key>Program</key>
            <string>/Library/PrivilegedHelperTools/com.docker.vmnetd</string>
            <key>ProgramArguments</key>
            <array>
              <string>/Library/PrivilegedHelperTools/com.docker.vmnetd</string>
            </array>
            <key>RunAtLoad</key>
            <true/>
            <key>Sockets</key>
            <dict>
              <key>Listener</key>
              <dict>
                <key>SockPathMode</key>
                <integer>438</integer>
                <key>SockPathName</key>
                <string>/var/run/com.docker.vmnetd.sock</string>
              </dict>
            </dict>
            <key>Version</key>
            <string>59</string>
          </dict>
          </plist>
          EOF
          sudo chmod 544 /Library/PrivilegedHelperTools/com.docker.vmnetd
          sudo chmod 644 /Library/LaunchDaemons/com.docker.vmnetd.plist
          sudo launchctl load /Library/LaunchDaemons/com.docker.vmnetd.plist
      - name: Start Docker for Mac
        run: |
          open -g -a Docker.app/Contents/MacOS/Docker || exit
          while ! docker system info &>/dev/null ; do
              sleep 1
          done
      - name: Run in Docker for Mac
        run: |
          docker build . -t testing
          docker container run testing

